unit Udm;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.Phys.FB, FireDAC.Phys.FBDef,
  Datasnap.Provider, Datasnap.DBClient, Data.FMTBcd, Data.SqlExpr,
  FireDAC.Phys.IBBase, UfrmMolelo, UfrmPrincipal;

type
  TDataModule1 = class(TDataModule)
    FDConnection1: TFDConnection;
    cdsCliente: TClientDataSet;
    FDQueryCliente: TFDQuery;
    DataSetProvider1: TDataSetProvider;
    FDPhysFBDriverLink1: TFDPhysFBDriverLink;
    FDQueryProduto: TFDQuery;
    DataSetProvider2: TDataSetProvider;
    cdsProduto: TClientDataSet;
    FDQueryUsuario: TFDQuery;
    DataSetProvider3: TDataSetProvider;
    cdsUsuario: TClientDataSet;
    FDQueryPerfil: TFDQuery;
    DataSetProvider4: TDataSetProvider;
    cdsPerfil: TClientDataSet;
    FDQueryVendas: TFDQuery;
    DataSetProvider5: TDataSetProvider;
    ClientDataSet1: TClientDataSet;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

end.
